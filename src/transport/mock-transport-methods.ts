import { TransportMethodDocument } from "src/schemas/transportMethod.schema";
import { Types } from "mongoose";

export const mockTransportMethods: TransportMethodDocument[] = [
  {
    _id: new Types.ObjectId("65275a5e3620e67160ad3701"),
    name: "Taxi",
    description: "Standard taxi service",
    contactInfo: "123-456-7890",
    hasBooking: false,
    providerId: null,
    __v: 0,
    save: () => Promise.resolve(this as any),
    $isNew: false,
    $isEmpty: false,
    collection: {} as any,
    isDirectModified: () => false,
    isModified: () => false,
    isDeleted: () => false,
    isInit: () => true,
    isSelected: () => true,
    get: () => null,
    set: () => this,
    markModified: () => {},
    inc: () => this,
    populate: () => Promise.resolve(this as any),
    $getPopulatedDocs: () => [],
    equals: () => false,
    inspect: () => ({}),
    toJSON: () => ({
      _id: new Types.ObjectId("65275a5e3620e67160ad3701"),
      name: "Taxi",
      description: "Standard taxi service",
      contactInfo: "123-456-7890",
      hasBooking: false,
      providerId: null,
    }),
    toObject: () => ({}),
  } as any,
  {
    _id: new Types.ObjectId("65275a5e3620e67160ad3702"),
    name: "Personal Car",
    description: "Private car for personal use",
    contactInfo: null,
    hasBooking: false,
    providerId: null,
    __v: 0,
    save: () => Promise.resolve(this as any),
    $isNew: false,
    $isEmpty: false,
    collection: {} as any,
    isDirectModified: () => false,
    isModified: () => false,
    isDeleted: () => false,
    isInit: () => true,
    isSelected: () => true,
    get: () => null,
    set: () => this,
    markModified: () => {},
    inc: () => this,
    populate: () => Promise.resolve(this as any),
    $getPopulatedDocs: () => [],
    equals: () => false,
    inspect: () => ({}),
    toJSON: () => ({
      _id: new Types.ObjectId("65275a5e3620e67160ad3702"),
      name: "Personal Car",
      description: "Private car for personal use",
      contactInfo: null,
      hasBooking: false,
      providerId: null,
    }),
    toObject: () => ({}),
  } as any,
];